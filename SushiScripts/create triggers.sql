GO
USE SushiDB
GO

-- •	Với mỗi chi nhánh, thời gian mở cửa phải trước thời gian đóng cửa.
GO
	CREATE TRIGGER TRG_CHINHANH_INSERT_UPDATE_TGMOCUA
	ON CHINHANH
	FOR INSERT, UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		IF EXISTS	(SELECT 1
					FROM INSERTED
					WHERE THOIGIANDONGCUA >= THOIGIANMOCUA
					)
		BEGIN
			RAISERROR (N'Với mỗi chi nhánh, thời gian mở cửa phải trước thời gian đóng cửa.', 16, 1)
			ROLLBACK TRANSACTION;
			RETURN
		END
	END
GO

-- •	Địa chỉ và số điện thoại của chi nhánh phải là duy nhất để tránh trùng lặp thông tin.
GO
	ALTER TABLE CHINHANH
	ADD CONSTRAINT UQ_CHINHANH_DIACHI UNIQUE (DIACHI);

	ALTER TABLE CHINHANH
	ADD CONSTRAINT UQ_CHINHANH_SDT UNIQUE (SDT);
GO

-- •	Số lượng món hoặc combo phải lớn hơn 0 trong mỗi chi tiết món.
GO
	CREATE TRIGGER TRG_CHITIETMON_INSERT_UPDATE_SLMON
	ON CHITIETMONAN
	FOR INSERT, UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		IF EXISTS	(SELECT 1
					FROM INSERTED
					WHERE SOLUONG <= 0)
		BEGIN
			RAISERROR (N'Số lượng món hoặc combo phải lớn hơn 0 trong mỗi chi tiết món.', 16, 1)
			ROLLBACK TRANSACTION;
			RETURN
		END
	END
GO

-- •	Đơn giá tổng được tính theo số lượng món ăn hoặc combo và đơn giá.
/*
				I	D	U
CHITIETMONAN	+	-	+ (SOLUONG, DONGIATONG)
MONAN			-	+	+ (GIAHIENTAI)
COMBOMONAN		-	+	+ (DONGIACOMBO)
*/
GO
	CREATE TRIGGER TRG_CHITIETMONAN_INSERT_UPDATE_DONGIATONG
	ON CHITIETMONAN
	AFTER INSERT, UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		UPDATE CT
		SET CT.DONGIATONG = 
			CASE
				WHEN CT.MAMON IS NOT NULL THEN CT.SOLUONG * M.GIAHIENTAI
				WHEN CT.MACOMBO IS NOT NULL THEN CT.SOLUONG * CB.DONGIACOMBO
				ELSE 0
			END
		FROM CHITIETMONAN CT
		LEFT JOIN MONAN M ON CT.MAMON = M.MAMON
		LEFT JOIN COMBOMONAN CB ON CT.MACOMBO = CB.MACOMBO
		INNER JOIN INSERTED I ON CT.MACTMON = I.MACTMON
	END
GO
	CREATE TRIGGER TRG_MONAN_UPDATE_DONGIATONG
	ON MONAN
	AFTER UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		UPDATE CT
		SET CT.DONGIATONG = CT.SOLUONG * I.GIAHIENTAI
		FROM CHITIETMONAN CT
		INNER JOIN INSERTED I ON CT.MAMON = I.MAMON
	END
GO
	CREATE TRIGGER TRG_COMBOMONAN_UPDATE_DONGIATONG
	ON COMBOMONAN
	AFTER UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		UPDATE CT
		SET CT.DONGIATONG = CT.SOLUONG * I.DONGIACOMBO
		FROM CHITIETMONAN CT
		INNER JOIN INSERTED I ON CT.MAMON = I.MACOMBO
	END
GO
	CREATE TRIGGER TRG_CHITIETMONAN_UPDATE_DONGIATONG
	ON CHITIETMONAN
	AFTER UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		IF UPDATE(DONGIATONG)
		BEGIN
			RAISERROR ('Không thể cập nhật tổng tiền hóa đơn', 16, 1)
			ROLLBACK TRANSACTION;
		END
	END
GO

-- •	Khách hàng chỉ có thể chọn món từ thực đơn của nhà hàng.
GO
	CREATE TRIGGER TRG_CHITIETMONAN_VALIDATE_CHONMON
	ON CHITIETMONAN
	AFTER INSERT, UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		IF EXISTS (
			SELECT 1
			FROM INSERTED I
			WHERE (I.MAMON IS NOT NULL AND NOT EXISTS (SELECT 1 FROM MONAN M WHERE M.MAMON = I.MAMON))
			   OR (I.MACOMBO IS NOT NULL AND NOT EXISTS (SELECT 1 FROM COMBOMONAN CB WHERE CB.MACOMBO = I.MACOMBO))
		)
		BEGIN
			RAISERROR (N'Khách hàng chỉ có thể chọn món từ thực đơn của nhà hàng.', 16, 1)
			ROLLBACK TRANSACTION;
		END
	END
GO
-- •	Đơn đặt món phải được xác nhận trước khi chuẩn bị.
GO
	CREATE TRIGGER TRG_CHITIETMONAN_INSERT_XACNHAN
	ON CHITIETMONAN
	FOR INSERT
	AS
	BEGIN
		SET NOCOUNT ON;

		IF EXISTS	(SELECT 1
					FROM DONDATMON D
					INNER JOIN INSERTED I ON D.MADON = I.MADONDATMON
					WHERE D.TRANGTHAI = N'Chưa xác nhận' OR I.MADONDATMON IS NULL)
		BEGIN
			RAISERROR (N'Đơn đặt món phải được xác nhận trước khi chuẩn bị.', 16, 1)
			ROLLBACK TRANSACTION;
		END
	END
GO
	CREATE TRIGGER TRG_DONDATMON_UPDATE_XACNHAN
	ON DONDATMON
	AFTER UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;
		
		DELETE FROM CHITIETMONAN
		WHERE MADONDATMON = (SELECT I.MADON
							FROM INSERTED I
							WHERE I.TRANGTHAI = N'Chưa xác nhận')
	END
GO

-- •	Khi đơn đặt món có trạng thái thành công, thành tiền mới được cộng vào tổng tiền của hoá đơn.
GO
	CREATE TRIGGER TRG_DONDATMON_INSERT_UPDATE_TINHHOADON
	ON DONDATMON
	AFTER INSERT, UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		UPDATE HD
		SET HD.TONGTIEN = HD.TONGTIEN + I.THANHTIEN * (1 + HD.VAT) * (1 - KM.LUONGKMPHANTRAM)
		FROM HOADON HD
		INNER JOIN INSERTED I ON HD.MAHOADON = I.HOADONLIENQUAN
		INNER JOIN KHUYENMAI KM ON HD.MAKHUYENMAI = KM.MAKHUYENMAI
	END
GO
	CREATE TRIGGER TRG_DONDATMON_DELETE_TINHHOADON
	ON DONDATMON
	AFTER DELETE
	AS
	BEGIN
		SET NOCOUNT ON;

		UPDATE HD
		SET HD.TONGTIEN = HD.TONGTIEN - I.THANHTIEN * (1 + HD.VAT) * (1 - KM.LUONGKMPHANTRAM)
		FROM HOADON HD
		INNER JOIN INSERTED I ON HD.MAHOADON = I.HOADONLIENQUAN
		INNER JOIN KHUYENMAI KM ON HD.MAKHUYENMAI = KM.MAKHUYENMAI
	END
GO
	CREATE TRIGGER TRG_HOADON_UPDATE_TINHHOADON
	ON HOADON
	AFTER UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		IF UPDATE(TONGTIEN)
		BEGIN
			RAISERROR ('Không thể cập nhật tổng tiền hóa đơn', 16, 1)
			ROLLBACK TRANSACTION;
		END
	END
GO

-- Phải có số điện thoại hợp lệ và email để liên lạc hoặc xác nhận các đơn hàng trực tuyến. 
GO
	CREATE TRIGGER TRG_KHACHHANG_INSERT_UPDATE_CHECK_EMAIL_PHONENUM
	ON KHACHHANG
	AFTER INSERT, UPDATE
	AS
	BEGIN
		IF EXISTS (SELECT 1 FROM INSERTED WHERE 
				SDT NOT LIKE '[0-9]%' OR LEN(SDT) > 10 OR
				EMAIL NOT LIKE '%@%.%')
		BEGIN
			RAISERROR ('Invalid contact information for online order.', 16, 1);
			ROLLBACK;
		END;
	END;
GO

-- Khách phải cung cấp đủ thông tin cá nhân để đăng ký thẻ thành viên. 
GO
	CREATE TRIGGER TRG_CHITIETKHACHHANG_INSERT_UPDATE_FULL_INFO_NEEDED
	ON CHITIETKHACHHANG
	AFTER INSERT, UPDATE
	AS
	BEGIN
		IF EXISTS (SELECT 1 FROM INSERTED 
				WHERE MAKHACHHANG IS NULL OR 
						MATHE IS NULL OR 
						NHANVIENTAOLAP IS NULL)
		BEGIN
			RAISERROR ('Incomplete member card registration information.', 16, 1);
			ROLLBACK;
		END;
	END;
GO

-- Khách hàng phải có thông tin liên lạc hợp lệ (tên, sđt, địa chỉ) để đặt hàng. 
GO
	-- Trigger kiểm tra thông tin liên lạc hợp lệ khi thêm hoặc sửa đơn đặt món
	CREATE TRIGGER TRG_DONDATMON_INSERT_UPDATE_VALIDATE_CONTACT_INFO_KHACHHANG
	ON DONDATMON
	AFTER INSERT, UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		-- Kiểm tra thông tin liên lạc từ bảng KHACHHANG
		IF EXISTS (
			SELECT 1
			FROM INSERTED I
			JOIN KHACHHANG K ON I.KHACHHANGDAT = K.MAKHACHHANG
			WHERE LEN(K.HOTEN) = 0 
			OR K.SDT NOT LIKE '[0-9]%' 
			OR LEN(K.SDT) != 10
			OR K.EMAIL NOT LIKE '%@%'
		)
		BEGIN
			RAISERROR ('Thông tin khách hàng không hợp lệ! Vui lòng kiểm tra lại tên, số điện thoại hoặc email.', 16, 1);
			ROLLBACK TRANSACTION;
		END
	END;
	GO

	-- Trigger kiểm tra thông tin liên lạc hợp lệ khi thêm hoặc sửa khách hàng
	CREATE TRIGGER TRG_KHACHHANG_INSERT_UPDATE_VALIDATE_KHACHHANG_INFO
	ON KHACHHANG
	AFTER INSERT, UPDATE
	AS
	BEGIN
		SET NOCOUNT ON;

		-- Kiểm tra thông tin liên lạc từ bảng KHACHHANG
		IF EXISTS (
			SELECT 1
			FROM INSERTED
			WHERE LEN(HOTEN) = 0 
			OR SDT NOT LIKE '[0-9]%' 
			OR LEN(SDT) != 10
			OR EMAIL NOT LIKE '%@%'
		)
		BEGIN
			RAISERROR ('Thông tin khách hàng không hợp lệ! Vui lòng kiểm tra lại tên, số điện thoại hoặc email.', 16, 1);
			ROLLBACK TRANSACTION;
		END
	END;
	GO
GO

GO

GO

-- MỘT BỘ PHẬN CHỈ CÓ 1 NHÂN VIÊN QUẢN LÝ VÀ MỘT NHÂN VIÊN CHỈ CÓ THỂ QUẢN LÝ MỘT BỘ PHẬN
CREATE TRIGGER trg_EnsureUniqueManager
ON BOPHAN
AFTER INSERT, UPDATE
AS
BEGIN
    -- Kiểm tra xem bộ phận có nhiều hơn một nhân viên quản lý không?
    IF EXISTS (
        SELECT B.MABOPHAN
        FROM INSERTED I
        JOIN BOPHAN B ON I.MABOPHAN = B.MABOPHAN
        GROUP BY B.MABOPHAN
        HAVING COUNT(B.QUANLYBOPHAN) > 1
    )
    BEGIN
        RAISERROR('Mỗi bộ phận chỉ có một nhân viên quản lý duy nhất!', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;

    -- Kiểm tra xem nhân viên có đang quản lý một bộ phận khác không?
    IF EXISTS (
        SELECT 1
        FROM INSERTED I
        WHERE EXISTS (
            SELECT 1
            FROM BOPHAN B
            WHERE B.QUANLYBOPHAN = I.QUANLYBOPHAN AND B.MABOPHAN <> I.MABOPHAN
        )
    )
    BEGIN
        RAISERROR('Mỗi nhân viên chỉ có thể quản lý một bộ phận duy nhất!', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END;
END;

GO

-- Lương hiện tại sẽ được tính bằng hệ số lương và lương
/* 
							I	D	U
		NHANVIEN			+	-	+ (LUONGHIENTAI)
		LICHSULAMVIEC		+	-	+ (HESOLUONG, MACHINHANH, MABOPHAN)
		BOPHAN				-	+	- (LUONG)
*/

CREATE TRIGGER TRG_UPDATE_LUONGHIENTAI_ON_LICHSULAMVIEC
ON LICHSULAMVIEC
AFTER INSERT, UPDATE
AS
BEGIN
    -- Cập nhật lương hiện tại cho tất cả nhân viên liên quan đến các bản ghi mới hoặc đã cập nhật
    UPDATE NV
    SET NV.LUONGHIENTAI = LSLV.HESOLUONG * BP.LUONG
    FROM NHANVIEN NV
    INNER JOIN INSERTED LSLV
        ON NV.MANHANVIEN = LSLV.MANHANVIEN
    INNER JOIN BOPHAN BP
        ON LSLV.MABOPHAN = BP.MABOPHAN
        AND LSLV.MACHINHANH = BP.MACHINHANH
    WHERE LSLV.NGAYNGHIVIEC IS NULL; -- Chỉ cập nhật nếu nhân viên chưa nghỉ việc
END;

GO

CREATE TRIGGER TRG_UPDATE_LUONGHIENTAI_ON_BOPHAN
ON BOPHAN
AFTER UPDATE
AS
BEGIN
    -- Cập nhật lương hiện tại cho nhân viên thuộc các bộ phận bị thay đổi lương
    UPDATE NV
    SET NV.LUONGHIENTAI = LSLV.HESOLUONG * BP.LUONG
    FROM NHANVIEN NV
    INNER JOIN LICHSULAMVIEC LSLV
        ON NV.MANHANVIEN = LSLV.MANHANVIEN
    INNER JOIN INSERTED BP
        ON LSLV.MABOPHAN = BP.MABOPHAN
        AND LSLV.MACHINHANH = BP.MACHINHANH
    WHERE LSLV.NGAYNGHIVIEC IS NULL; -- Chỉ cập nhật nếu nhân viên chưa nghỉ việc
END;
GO

-- Khách hàng phải thanh toán trực tuyến trước khi nhận hàng

CREATE TRIGGER TRG_KIEMTRA_THANHTOAN
ON DATHANGTRUCTUYEN
FOR UPDATE
AS
BEGIN
	IF EXISTS(
		SELECT 1
		FROM INSERTED I
		JOIN DONDATMON D ON D.MADON = I.MADHTRUCTUYEN
		JOIN HOADON H ON H.MAHOADON = D.HOADONLIENQUAN
		WHERE I.TRANGTHAIGIAO = N'Đang giao hàng'
		AND H.PHUONGTHUC <> N'Thanh toán trực tuyến'
	)
	BEGIN --Ngăn chặn cập nhật giao hàng
		RAISERROR(N'Khách hàng phải thanh toán trực tuyến trước khi nhận hàng.', 16, 1)
		ROLLBACK TRANSACTION
	END
	ELSE
	BEGIN --Cho phép cập nhật trạng thái giao hàng nếu đã thanh toán trực tuyến
		UPDATE DATHANGTRUCTUYEN
		SET TRANGTHAIGIAO = I.TRANGTHAIGIAO,
		THOIGIANGIAO = I.THOIGIANGIAO,
		DIACHIGIAO = I.DIACHIGIAO
		FROM INSERTED I
		WHERE DATHANGTRUCTUYEN.MADHTRUCTUYEN = I.MADHTRUCTUYEN
	END
END
GO

-- Sau 20h00 nhà hàng sẽ dừng nhận đặt hàng về nhà. 
CREATE TRIGGER TRG_DUNGNHAN_DATHANG
ON DATHANGTRUCTUYEN
FOR INSERT
AS
BEGIN
	IF EXISTS (
		SELECT 1
		FROM INSERTED I
		JOIN DONDATMON D ON D.MADON = I.MADHTRUCTUYEN
		WHERE D.GIODAT >= '20:00:00'
	) 
	BEGIN
		RAISERROR(N'Nhà hàng dừng nhận đặt hàng trực tuyến sau 20h00', 16, 1)
		ROLLBACK TRANSACTION
		RETURN
	END	
		INSERT INTO DATHANGTRUCTUYEN (MADHTRUCTUYEN, THOIGIANGIAO, DIACHIGIAO, TRANGTHAIGIAO)
		SELECT MADHTRUCTUYEN, THOIGIANGIAO, DIACHIGIAO, TRANGTHAIGIAO
		FROM INSERTED	
END
GO

-- Đơn hàng chỉ được chấp nhận nếu món ăn trong đơn hàng có trạng thái "có phục vụ". 
CREATE TRIGGER TRG_KIEMTRA_TRANGTHAI_MONAN
ON DONDATMON
FOR INSERT
AS
BEGIN
	IF EXISTS(
		SELECT 1
		FROM INSERTED I
		JOIN CHITIETMONAN C ON C.MADONDATMON = I.MADON
		JOIN MONAN M ON C.MAMON = M.MAMON
		WHERE M.DANHMUC LIKE N'Có phục vụ'
	)
	BEGIN
		INSERT INTO DONDATMON(MADON, GIODAT,NGAYDAT, TRANGTHAI, LOAIDONDATMON, HOADONLIENQUAN, KHACHHANGDAT, MADATCHO,CHINHANHDAT,NHANVIENTAOLAP)
		SELECT MADON, GIODAT,NGAYDAT, TRANGTHAI, LOAIDONDATMON, HOADONLIENQUAN, KHACHHANGDAT, MADATCHO,CHINHANHDAT,NHANVIENTAOLAP
		FROM INSERTED
	END
	ELSE
	BEGIN
		RAISERROR(N'Món ăn không có sẵn!', 16, 1)
		ROLLBACK TRANSACTION
		RETURN
	END
END
GO


-- Thời gian đặt món phải được ghi chú rõ ràng
GO
	CREATE TRIGGER TRG_DONDATMON_INSERT_UPDATE_TIME_DATE_CHECK
	ON DONDATMON
	FOR INSERT, UPDATE
	AS
	BEGIN
		IF  (EXISTS(SELECT 1 
					FROM INSERTED I
					WHERE I.NGAYLAP IS NULL OR I.GIODAT IS NULL ))
			BEGIN
				RAISERROR(N'Thời gian đặt món phải được ghi chú rõ ràng!', 16, 1)
				ROLLBACK TRANSACTION
				RETURN
			END
	END
GO

-- Thời gian giao hàng dự kiến phải nằm trong khung giờ hoạt động của chi nhánh. 
CREATE TRIGGER TRG_KIEMTRA_THOIGIANGIAO
ON DATHANGTRUCTUYEN
FOR INSERT
AS
BEGIN
	IF EXISTS(
		SELECT 1
		FROM INSERTED I
		JOIN DONDATMON D ON D.MADON = I.MADHTRUCTUYEN
		JOIN CHINHANH C ON C.MACHINHANH = D.CHINHANHDAT
		WHERE I.THOIGIANGIAO BETWEEN C.THOIGIANMOCUA AND C.THOIGIANDONGCUA
	)
	BEGIN
		INSERT INTO DATHANGTRUCTUYEN (MADHTRUCTUYEN, THOIGIANGIAO, DIACHIGIAO, TRANGTHAIGIAO)
        SELECT MADHTRUCTUYEN, THOIGIANGIAO, DIACHIGIAO, TRANGTHAIGIAO
        FROM INSERTED
	END
	ELSE
	BEGIN
		RAISERROR(N'Thời gian giao hàng dự kiến phải nằm trong khung giờ hoạt động của chi nhánh.', 16, 1)
        ROLLBACK TRANSACTION
	END
END
GO

-- Kiểm tra đơn đặt phải được thực hiện trước khi bắt đầu chế biến
CREATE TRIGGER TRG_KIEMTRA_TRUOCCHEBIEN
ON DONDATMON
FOR UPDATE
AS
BEGIN
	DECLARE @ORDERID CHAR(10)

	SET @ORDERID = (SELECT MADON FROM INSERTED)

	IF NOT EXISTS(
		SELECT 1
		FROM DONDATMON
		WHERE MADON = @ORDERID
		AND TRANGTHAI = N'Đã xác nhận'
	)
	BEGIN
		RAISERROR(N'Đơn hàng chưa được xác nhận. Không thể bắt đầu chế biến!', 16, 1)
        ROLLBACK TRANSACTION
	END
END
GO

-- Món ăn khi đánh giá cần có đủ về đánh giá về chất lượng và số tiền. 
CREATE TRIGGER TRG_KIEMTRA_DANHGIAMONAN
ON DANHGIAMONAN
FOR INSERT
AS
BEGIN
	IF EXISTS(
		SELECT 1
		FROM INSERTED
		WHERE DIEMGIACA IS NULL AND DIEMCHATLUONGMONAN IS NULL
	)
		BEGIN
			RAISERROR(N'Mỗi đánh giá món ăn cần có đầy đủ đánh giá về chất lượng và số tiền!', 16, 1)
			ROLLBACK TRANSACTION
			RETURN
		END
	END;
GO