<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Highest Revenue Generating Customers - Truy vấn J</title>

    <link rel="stylesheet" href="../public/statistics.css">
</head>

<body>
    <div class="statistics_container">
        <div class="medium-title-deli">Highest Revenue Generating Customers</div>
        <div class="statistics_setup-input">
            <!-- Input here -->
            <input type="date" id="date" name="NgayDen" required>
            <input type="date" id="date" name="NgayDen" required>
            <input type="number" id="soluong" name="SoLuongTop" placeholder="Your number of guests" required>
        </div>
        <div class="statistics_setup-input">
            <div class="button-red">Analyze</div>
            <a class="button-gray" href="/staff/statistics">Back to Statistics</a>
        </div>

        <!-- Change truy vấn here -->
        {{#if errorMessage}}
        <p style="color: red;">{{errorMessage}}</p>
        {{/if}}

        {{#if statisticsItems.length}}
        <table border="1">
            <thead>
                <tr>
                    <th>Select</th>
                    <th>Item Code (MACTMON)</th>
                    <th>Item Name </th>
                    <th>Quantity (SOLUONG)</th>
                    <th>Total Price (DONGIATONG)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {{#each statisticsItems}}
                <tr>
                    <td>
                        <form action="/statistics/select" method="POST" id="statistics-form">
                            <input type="checkbox" name="MACTMON[]" value="{{this.MACTMON}}" class="statistics-checkbox"
                                data-mactmon="{{this.MACTMON}}" {{#if this.SELECTED}}checked{{/if}}>
                        </form>
                    </td>
                    <td>{{this.MACTMON}}</td>
                    <td>{{this.ITEM_NAME}}</td>
                    <td>{{this.SOLUONG}}</td>
                    <td>{{this.DONGIATONG}}</td>
                    <td>
                        <!-- Form for deleting an item -->
                        <form action="/statistics/delete" method="POST" style="display:inline;" id="{{this.MACTMON}}">
                            <input type="hidden" name="MACTMON" value="{{this.MACTMON}}">
                            <button type="submit" class="button-delete">Delete</button>
                        </form>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>

        <!-- Add the Create Order Button -->
        <form action="/statistics/create-order" method="POST" id="create-order-form">
            <!-- Hidden input to include selected items -->
            <input type="hidden" name="selectedItems" id="selectedItems">
            <button type="submit" class="button-red">Create Order</button>
        </form>

        <script>
            // Add event listeners to the delete forms
            document.querySelectorAll('form[action="/statistics/delete"]').forEach((form) => {
                form.addEventListener('submit', async (event) => {
                    event.preventDefault(); // Prevent the default form submission
                    const formData = new FormData(form);
                    const MACTMON = formData.get('MACTMON');

                    try {
                        const response = await fetch('/statistics/delete', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ MACTMON }),
                        });

                        if (response.ok) {
                            alert("Item deleted successfully.");
                            window.location.reload(); // Reload the page to reflect the changes
                        } else {
                            const errorData = await response.json();
                            alert(`Error: ${errorData.message}`);
                        }
                    } catch (error) {
                        console.error("Network error:", error);
                        alert("Failed to delete the item. Please try again.");
                    }
                });
            });

            // Add event listeners to checkboxes
            document.querySelectorAll('.statistics-checkbox').forEach((checkbox) => {
                checkbox.addEventListener('change', async function () {
                    const MACTMON = this.getAttribute('data-mactmon');
                    const isChecked = this.checked;
                    const statisticsItemsLeft = document.querySelectorAll('.statistics-checkbox').length;

                    if (statisticsItemsLeft === 0) {
                        alert('No items left in the statistics');
                        return;
                    }

                    try {
                        const response = await fetch('/statistics/select', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ MACTMON, SELECTED: isChecked ? 1 : 0 })
                        });

                        if (response.ok) {
                            console.log('Item selection updated');
                        } else {
                            const errorData = await response.json();
                            console.error('Error:', errorData.message);
                        }
                    } catch (error) {
                        console.error('Network error:', error);
                    }
                });
            });

            // Update the hidden input with selected items when creating an order
            document.getElementById('create-order-form').addEventListener('submit', (event) => {
                const selectedItems = [];
                document.querySelectorAll('.statistics-checkbox:checked').forEach((checkbox) => {
                    selectedItems.push(checkbox.value);
                });

                if (selectedItems.length === 0) {
                    alert('Please select at least one item to create an order.');
                    event.preventDefault(); // Prevent form submission
                    return;
                }

                document.getElementById('selectedItems').value = JSON.stringify(selectedItems);
            });
        </script>

        {{else}}
        <p>Your statistics is empty.</p>
        {{/if}}
    </div>
</body>

</html>